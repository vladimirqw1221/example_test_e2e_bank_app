{"uid":"a57e29e6d206d503","name":"Bank account transfer for native user","fullName":"test.test_costumer_login.TestCostumerLogin#test_costumer_login_pege","historyId":"81073f16d66b974b0c2542bf9ff983f0","time":{"start":1699561358432,"stop":1699561364487,"duration":6055},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ddb8856fb3 <unknown>\n#1 0x55ddb852a4a7 <unknown>\n#2 0x55ddb852f509 <unknown>\n#3 0x55ddb8531120 <unknown>\n#4 0x55ddb85311dc <unknown>\n#5 0x55ddb8577db1 <unknown>\n#6 0x55ddb8575f26 <unknown>\n#7 0x55ddb8574028 <unknown>\n#8 0x55ddb8573097 <unknown>\n#9 0x55ddb8567d59 <unknown>\n#10 0x55ddb8593942 <unknown>\n#11 0x55ddb8567776 <unknown>\n#12 0x55ddb8593b0e <unknown>\n#13 0x55ddb85acc02 <unknown>\n#14 0x55ddb8593713 <unknown>\n#15 0x55ddb856618b <unknown>\n#16 0x55ddb8566f7e <unknown>\n#17 0x55ddb881c8d8 <unknown>\n#18 0x55ddb8820800 <unknown>\n#19 0x55ddb882acfc <unknown>\n#20 0x55ddb8821418 <unknown>\n#21 0x55ddb87ee42f <unknown>\n#22 0x55ddb88454e8 <unknown>\n#23 0x55ddb88456b4 <unknown>\n#24 0x55ddb8856143 <unknown>\n#25 0x7f3ed8094ac3 <unknown>","statusTrace":"self = <test.test_costumer_login.TestCostumerLogin object at 0x7f4742522d40>\n\n    @allure.title(\"Bank account transfer for native user\")\n    @allure.severity(\"NORMAL\")\n    @pytest.mark.smoke\n    def test_costumer_login_pege(self):\n        self.costumer_login_page.open()\n        self.costumer_login_page.is_open_browser()\n        self.costumer_login_page.navigate_to_costumer_login()\n        self.costumer_login_page.replenishment_deposit()\n>       self.costumer_login_page.withdrawn_sum()\n\ntest/test_costumer_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfeature_pages/costumer_login_page.py:41: in withdrawn_sum\n    self.select_element_is_visibility(self.locator.AMOUNT_INPUT).click()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47414e6d40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55ddb88456b4 \\\\u003Cunknown>\\\\n#24 0x55ddb8856143 \\\\u003Cunknown>\\\\n#25 0x7f3ed8094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55ddb8856fb3 <unknown>\nE       #1 0x55ddb852a4a7 <unknown>\nE       #2 0x55ddb852f509 <unknown>\nE       #3 0x55ddb8531120 <unknown>\nE       #4 0x55ddb85311dc <unknown>\nE       #5 0x55ddb8577db1 <unknown>\nE       #6 0x55ddb8575f26 <unknown>\nE       #7 0x55ddb8574028 <unknown>\nE       #8 0x55ddb8573097 <unknown>\nE       #9 0x55ddb8567d59 <unknown>\nE       #10 0x55ddb8593942 <unknown>\nE       #11 0x55ddb8567776 <unknown>\nE       #12 0x55ddb8593b0e <unknown>\nE       #13 0x55ddb85acc02 <unknown>\nE       #14 0x55ddb8593713 <unknown>\nE       #15 0x55ddb856618b <unknown>\nE       #16 0x55ddb8566f7e <unknown>\nE       #17 0x55ddb881c8d8 <unknown>\nE       #18 0x55ddb8820800 <unknown>\nE       #19 0x55ddb882acfc <unknown>\nE       #20 0x55ddb8821418 <unknown>\nE       #21 0x55ddb87ee42f <unknown>\nE       #22 0x55ddb88454e8 <unknown>\nE       #23 0x55ddb88456b4 <unknown>\nE       #24 0x55ddb8856143 <unknown>\nE       #25 0x7f3ed8094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1699561349396,"stop":1699561349412,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"driver","time":{"start":1699561349412,"stop":1699561358432,"duration":9020},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup","time":{"start":1699561358432,"stop":1699561358432,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ddb8856fb3 <unknown>\n#1 0x55ddb852a4a7 <unknown>\n#2 0x55ddb852f509 <unknown>\n#3 0x55ddb8531120 <unknown>\n#4 0x55ddb85311dc <unknown>\n#5 0x55ddb8577db1 <unknown>\n#6 0x55ddb8575f26 <unknown>\n#7 0x55ddb8574028 <unknown>\n#8 0x55ddb8573097 <unknown>\n#9 0x55ddb8567d59 <unknown>\n#10 0x55ddb8593942 <unknown>\n#11 0x55ddb8567776 <unknown>\n#12 0x55ddb8593b0e <unknown>\n#13 0x55ddb85acc02 <unknown>\n#14 0x55ddb8593713 <unknown>\n#15 0x55ddb856618b <unknown>\n#16 0x55ddb8566f7e <unknown>\n#17 0x55ddb881c8d8 <unknown>\n#18 0x55ddb8820800 <unknown>\n#19 0x55ddb882acfc <unknown>\n#20 0x55ddb8821418 <unknown>\n#21 0x55ddb87ee42f <unknown>\n#22 0x55ddb88454e8 <unknown>\n#23 0x55ddb88456b4 <unknown>\n#24 0x55ddb8856143 <unknown>\n#25 0x7f3ed8094ac3 <unknown>","statusTrace":"self = <test.test_costumer_login.TestCostumerLogin object at 0x7f4742522d40>\n\n    @allure.title(\"Bank account transfer for native user\")\n    @allure.severity(\"NORMAL\")\n    @pytest.mark.smoke\n    def test_costumer_login_pege(self):\n        self.costumer_login_page.open()\n        self.costumer_login_page.is_open_browser()\n        self.costumer_login_page.navigate_to_costumer_login()\n        self.costumer_login_page.replenishment_deposit()\n>       self.costumer_login_page.withdrawn_sum()\n\ntest/test_costumer_login.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nfeature_pages/costumer_login_page.py:41: in withdrawn_sum\n    self.select_element_is_visibility(self.locator.AMOUNT_INPUT).click()\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:93: in click\n    self._execute(Command.CLICK_ELEMENT)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py:394: in _execute\n    return self._parent.execute(command, params)\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x7f47414e6d40>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"stale element reference\",\"message\":\"stale element reference: stale elemen...\\\\n#23 0x55ddb88456b4 \\\\u003Cunknown>\\\\n#24 0x55ddb8856143 \\\\u003Cunknown>\\\\n#25 0x7f3ed8094ac3 \\\\u003Cunknown>\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\nE         (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nE       Stacktrace:\nE       #0 0x55ddb8856fb3 <unknown>\nE       #1 0x55ddb852a4a7 <unknown>\nE       #2 0x55ddb852f509 <unknown>\nE       #3 0x55ddb8531120 <unknown>\nE       #4 0x55ddb85311dc <unknown>\nE       #5 0x55ddb8577db1 <unknown>\nE       #6 0x55ddb8575f26 <unknown>\nE       #7 0x55ddb8574028 <unknown>\nE       #8 0x55ddb8573097 <unknown>\nE       #9 0x55ddb8567d59 <unknown>\nE       #10 0x55ddb8593942 <unknown>\nE       #11 0x55ddb8567776 <unknown>\nE       #12 0x55ddb8593b0e <unknown>\nE       #13 0x55ddb85acc02 <unknown>\nE       #14 0x55ddb8593713 <unknown>\nE       #15 0x55ddb856618b <unknown>\nE       #16 0x55ddb8566f7e <unknown>\nE       #17 0x55ddb881c8d8 <unknown>\nE       #18 0x55ddb8820800 <unknown>\nE       #19 0x55ddb882acfc <unknown>\nE       #20 0x55ddb8821418 <unknown>\nE       #21 0x55ddb87ee42f <unknown>\nE       #22 0x55ddb88454e8 <unknown>\nE       #23 0x55ddb88456b4 <unknown>\nE       #24 0x55ddb8856143 <unknown>\nE       #25 0x7f3ed8094ac3 <unknown>\n\n/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py:229: StaleElementReferenceException","steps":[{"name":"Open  browser and navigate to https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login","time":{"start":1699561358432,"stop":1699561359629,"duration":1197},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Login your account and checking welcome title","time":{"start":1699561359672,"stop":1699561363091,"duration":3419},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Replenishment deposit and checking balance","time":{"start":1699561363091,"stop":1699561364402,"duration":1311},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"Transfer sum","time":{"start":1699561364402,"stop":1699561364487,"duration":85},"status":"broken","statusMessage":"selenium.common.exceptions.StaleElementReferenceException: Message: stale element reference: stale element not found\n  (Session info: headless chrome=118.0.5993.117); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#stale-element-reference-exception\nStacktrace:\n#0 0x55ddb8856fb3 <unknown>\n#1 0x55ddb852a4a7 <unknown>\n#2 0x55ddb852f509 <unknown>\n#3 0x55ddb8531120 <unknown>\n#4 0x55ddb85311dc <unknown>\n#5 0x55ddb8577db1 <unknown>\n#6 0x55ddb8575f26 <unknown>\n#7 0x55ddb8574028 <unknown>\n#8 0x55ddb8573097 <unknown>\n#9 0x55ddb8567d59 <unknown>\n#10 0x55ddb8593942 <unknown>\n#11 0x55ddb8567776 <unknown>\n#12 0x55ddb8593b0e <unknown>\n#13 0x55ddb85acc02 <unknown>\n#14 0x55ddb8593713 <unknown>\n#15 0x55ddb856618b <unknown>\n#16 0x55ddb8566f7e <unknown>\n#17 0x55ddb881c8d8 <unknown>\n#18 0x55ddb8820800 <unknown>\n#19 0x55ddb882acfc <unknown>\n#20 0x55ddb8821418 <unknown>\n#21 0x55ddb87ee42f <unknown>\n#22 0x55ddb88454e8 <unknown>\n#23 0x55ddb88456b4 <unknown>\n#24 0x55ddb8856143 <unknown>\n#25 0x7f3ed8094ac3 <unknown>\n\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/example_test_e2e_bank_app/example_test_e2e_bank_app/feature_pages/costumer_login_page.py\", line 41, in withdrawn_sum\n    self.select_element_is_visibility(self.locator.AMOUNT_INPUT).click()\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 93, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webelement.py\", line 394, in _execute\n    return self._parent.execute(command, params)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 347, in execute\n    self.error_handler.check_response(response)\n  File \"/opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"stepsCount":4,"attachmentsCount":0,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1699561364837,"stop":1699561364896,"duration":59},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"Login page"},{"name":"severity","value":"NORMAL"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_costumer_login"},{"name":"subSuite","value":"TestCostumerLogin"},{"name":"host","value":"fv-az698-128"},{"name":"thread","value":"2316-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_costumer_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"a57e29e6d206d503.json","parameterValues":[]}