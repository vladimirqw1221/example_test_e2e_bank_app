{"uid":"46b0fd9c8614be77","name":"Bank account transfer for native user","fullName":"test.test_costumer_login.TestCostumerLogin#test_costumer_login_pege","historyId":"81073f16d66b974b0c2542bf9ff983f0","time":{"start":1692700067974,"stop":1692700084801,"duration":16827},"status":"failed","statusMessage":"AssertionError: This transactions is not show the list","statusTrace":"self = <feature_pages.costumer_login_page.CostumerLogin object at 0x7f98513bfbb0>\n\n    @allure.step(\"Pay transfer list\")\n    def transaction_checking(self):\n        self.select_element_is_clickable(self.locator.TRANSACTION_BTN).click()\n        self.select_element_is_visibility(self.locator.LOGO_TEXT)\n        try:\n>           result = self.wait.until(EC.presence_of_all_elements_located(self.locator.LIST_TRANSACTION))\n\nfeature_pages/costumer_login_page.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d9ec686ef596b1e7d8ad2cd7e3f27a34\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x7f9850572a70>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test.test_costumer_login.TestCostumerLogin object at 0x7f9851422b30>\n\n    @allure.title(\"Bank account transfer for native user\")\n    @allure.severity(\"NORMAL\")\n    @pytest.mark.smoke\n    def test_costumer_login_pege(self):\n        self.costumer_login_page.open()\n        self.costumer_login_page.is_open_browser()\n        self.costumer_login_page.navigate_to_costumer_login()\n        self.costumer_login_page.replenishment_deposit()\n        self.costumer_login_page.withdrawn_sum()\n>       self.costumer_login_page.transaction_checking()\n\ntest/test_costumer_login.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <feature_pages.costumer_login_page.CostumerLogin object at 0x7f98513bfbb0>\n\n    @allure.step(\"Pay transfer list\")\n    def transaction_checking(self):\n        self.select_element_is_clickable(self.locator.TRANSACTION_BTN).click()\n        self.select_element_is_visibility(self.locator.LOGO_TEXT)\n        try:\n            result = self.wait.until(EC.presence_of_all_elements_located(self.locator.LIST_TRANSACTION))\n    \n    \n            assert str(self.randon_balance) in result[0].text, f\"This result in not the value {self.randon_balance}\\\n            current value {result[0].text}\"\n            assert str(self.random_sum) in result[1].text, f\"This result in not the value {self.random_sum}\\\n            current value {result[1].text}\"\n        except TimeoutException:\n            self.make_screenshoin_in_report(f\"issue: This transactions not available \")\n>           assert False, \"This transactions is not show the list\"\nE           AssertionError: This transactions is not show the list\n\nfeature_pages/costumer_login_page.py:69: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1692700066232,"stop":1692700066249,"duration":17},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"driver","time":{"start":1692700066249,"stop":1692700067973,"duration":1724},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"setup","time":{"start":1692700067973,"stop":1692700067973,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: This transactions is not show the list","statusTrace":"self = <feature_pages.costumer_login_page.CostumerLogin object at 0x7f98513bfbb0>\n\n    @allure.step(\"Pay transfer list\")\n    def transaction_checking(self):\n        self.select_element_is_clickable(self.locator.TRANSACTION_BTN).click()\n        self.select_element_is_visibility(self.locator.LOGO_TEXT)\n        try:\n>           result = self.wait.until(EC.presence_of_all_elements_located(self.locator.LIST_TRANSACTION))\n\nfeature_pages/costumer_login_page.py:60: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"d9ec686ef596b1e7d8ad2cd7e3f27a34\")>\nmethod = <function presence_of_all_elements_located.<locals>._predicate at 0x7f9850572a70>\nmessage = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/selenium/webdriver/support/wait.py:95: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test.test_costumer_login.TestCostumerLogin object at 0x7f9851422b30>\n\n    @allure.title(\"Bank account transfer for native user\")\n    @allure.severity(\"NORMAL\")\n    @pytest.mark.smoke\n    def test_costumer_login_pege(self):\n        self.costumer_login_page.open()\n        self.costumer_login_page.is_open_browser()\n        self.costumer_login_page.navigate_to_costumer_login()\n        self.costumer_login_page.replenishment_deposit()\n        self.costumer_login_page.withdrawn_sum()\n>       self.costumer_login_page.transaction_checking()\n\ntest/test_costumer_login.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <feature_pages.costumer_login_page.CostumerLogin object at 0x7f98513bfbb0>\n\n    @allure.step(\"Pay transfer list\")\n    def transaction_checking(self):\n        self.select_element_is_clickable(self.locator.TRANSACTION_BTN).click()\n        self.select_element_is_visibility(self.locator.LOGO_TEXT)\n        try:\n            result = self.wait.until(EC.presence_of_all_elements_located(self.locator.LIST_TRANSACTION))\n    \n    \n            assert str(self.randon_balance) in result[0].text, f\"This result in not the value {self.randon_balance}\\\n            current value {result[0].text}\"\n            assert str(self.random_sum) in result[1].text, f\"This result in not the value {self.random_sum}\\\n            current value {result[1].text}\"\n        except TimeoutException:\n            self.make_screenshoin_in_report(f\"issue: This transactions not available \")\n>           assert False, \"This transactions is not show the list\"\nE           AssertionError: This transactions is not show the list\n\nfeature_pages/costumer_login_page.py:69: AssertionError","steps":[{"name":"Open  browser and navigate to https://www.globalsqa.com/angularJs-protractor/BankingProject/#/login","time":{"start":1692700067974,"stop":1692700068527,"duration":553},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Login your account and checking welcome title","time":{"start":1692700068531,"stop":1692700071824,"duration":3293},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Replenishment deposit and checking balance","time":{"start":1692700071824,"stop":1692700073071,"duration":1247},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Transfer sum","time":{"start":1692700073071,"stop":1692700074342,"duration":1271},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false},{"name":"Pay transfer list","time":{"start":1692700074342,"stop":1692700084801,"duration":10459},"status":"failed","statusMessage":"AssertionError: This transactions is not show the list\n","statusTrace":"  File \"/opt/hostedtoolcache/Python/3.10.12/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/example_test_e2e_bank_app/example_test_e2e_bank_app/feature_pages/costumer_login_page.py\", line 69, in transaction_checking\n    assert False, \"This transactions is not show the list\"\n","steps":[],"attachments":[{"uid":"608430d2b8564f35","name":"issue: This transactions not available ","source":"608430d2b8564f35.png","type":"image/png","size":36094}],"parameters":[],"stepsCount":0,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true}],"attachments":[],"parameters":[],"stepsCount":5,"attachmentsCount":1,"shouldDisplayMessage":true,"hasContent":true},"afterStages":[{"name":"driver::0","time":{"start":1692700085244,"stop":1692700085301,"duration":57},"status":"passed","steps":[],"attachments":[],"parameters":[],"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false}],"labels":[{"name":"severity","value":"NORMAL"},{"name":"feature","value":"Login page"},{"name":"tag","value":"smoke"},{"name":"parentSuite","value":"test"},{"name":"suite","value":"test_costumer_login"},{"name":"subSuite","value":"TestCostumerLogin"},{"name":"host","value":"fv-az587-514"},{"name":"thread","value":"2245-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test.test_costumer_login"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["smoke"]},"source":"46b0fd9c8614be77.json","parameterValues":[]}